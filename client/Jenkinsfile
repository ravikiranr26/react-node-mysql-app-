pipeline {
    
    agent none

    stages {
        stage('build') {
            agent {
                docker {
                    image 'node:16'
                }
            }
            when {
                changeset "**/client/**"
            }
            steps {
                echo 'Compiling the Result app'
                dir('client') {
                     sh 'npm install'
                }
            }
        }
        stage('docker-package') {
            agent any
            when {
                //branch 'main'
                changeset "**/client/**"
            }
            steps {
                echo 'Packaging the result app with docker.'
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerhub') {
                        def workerImage = docker.build("rknmit/emailai-ui:v${env.BUILD_ID}", "./client")
                        workerImage.push()
                        workerImage.push("${env.BRANCH_NAME}")
                    }
                }
            }
        }
    }
    
    post  {
        always {
            echo 'pipeline for result run is completed'
        }
        /* failure {
            slackSend (channel: "subjects-cd", message: "Build Failed: ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")    
         }
        success {
            slackSend (channel: "subjects-cd", message: "Build Success: ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
        } */
    }
}
